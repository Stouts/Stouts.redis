#!/bin/sh
# This file was generated by Ansible for {{ ansible_fqdn }}
# Do NOT modify this file by hand!
# 
# redis - this script starts and stops the redis-server daemon
#
# chkconfig:   - 85 15 
# description:  Redis is a persistent key-value database
# processname: redis-server
# config:      {{redis_configuration}}
# config:      {{redis_env_path}}
# pidfile:     {{redis_run_dir}}/redis-server.pid

REDIS_PORT={{redis_port}}
EXEC={{redis_dir}}/bin/redis-server
CLIEXEC="{{ redis_dir }}/bin/redis-cli -p ${REDIS_PORT}"
PIDFILE={{redis_run_dir}}/redis-server.pid
CONF={{redis_configuration}}

if [ -r /etc/sysconfig/redis ]; then
    . /etc/sysconfig/redis
fi

if [ -n "$REDIS_PASSWORD" ]; then
    CLIEXEC="${CLIEXEC} -a ${REDIS_PASSWORD}"
fi

if [ -n "$BIND_ADDRESS" ]; then
    CLIEXEC="${CLIEXEC} -h ${BIND_ADDRESS}"
fi

case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
                echo "$PIDFILE exists, process is already running or crashed"
        else
                echo "Starting Redis server..."
                if [ -n "$NOFILE_LIMIT" ]; then
                    ulimit -n $NOFILE_LIMIT
                fi
                $EXEC $CONF
        fi
        ;;
    status)
        if [ ! -f $PIDFILE ]
        then
                echo "Redis is not running."
        else
                echo "Redis is running."
        fi
        ;;
    restart|force-reload)
        ${0} stop
        ${0} start
        ;;
    stop)
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $CLIEXEC shutdown
                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
    *)
        echo "Please use start or stop as first argument"
        ;;
esac
